#!/bin/bash
# currently an insecure key is just file name.
# decypher filename.msg

#things to consider ... removing the seed from being a file to being an argument and also the coding block
# also look at the newalphabet and decode options.

#cd ~/CYPHER/

PATH=$PATH:./source

RANK=8;

tc_new -f decypherbet > /dev/null
tc_decomp -f decypherbet 10101 > /dev/null

for i in `rank -f decypherbet`
do tc_dec -f decypherbet $i
done | awk '{i++; print i-1,$1}' > /tmp/code

if test "`tail -1 /tmp/code | awk '{print $1}'`" -lt "$RANK"
then echo too few codes; exit;
fi 

if test "$#" -eq "0"
then
       echo "usage: nnt [-o][-p][-k]"
       exit 1
fi


for i in "$@"
do
case "$i" in
  "-p") 
        read -s -p "Passphrase: " PHRASE
                echo $PHRASE | t_unpack  | awk '{printf "obase=8; ibase=2; %s\n",$1}' | bc -l > decodeseed
        read -p "
Filename: " FILENAME
        OCTAL=0

   ;;
   "-k")
        read -s -p "Enter Key [0-9]* : " KEY
        echo $KEY | tr -d " a-zA-Z-." > decodeseed
        read -p "
Filename: " FILENAME
        OCTAL=1

   ;;
   "-o")
        read -p "Coded Octal File: " FILENAME
        OCTAL=1
   ;;
   "-h")
        echo "HELP:"
        echo "   -o    coded file is of an octal string"
        echo "   -p    with pass phrase for the key"
        echo "   -k    with a decimal string for a key"
        echo " usage: nnt [-o][-p][-k]"
        exit 1
   ;;
   *)   echo "usage: nnt [-p][-k]"
       exit 1
   ;; 
esac
done

#cat decodeseed
echo ""



echo "decyphering, may take a moment, please wait:"

echo "" | tr -d "\n" > /tmp/recoctalmess
./blkgen decodeseed decodeblock

SIZE=`cat  ./$FILENAME | tr -d "\n" | wc -c` 
SIZE=`echo "$SIZE * 4" | bc`

DOTS=0;
TRUNC=0;
COL=1;
for BLOCK in `cat  ./$FILENAME | tr -d "\n" | awk '{printf "obase=2; ibase=16; 1%s\n",$0}' | bc | tr -d "\n\\\" 2> /dev/null | tail -c $SIZE | fold -w 32`
do 
COLCODE="`echo $COL+5 | bc`" # coding column

CHECKCOL=`cut -f "$COLCODE" decodeblock | awk '{printf "%d",$1}'`
REFCOL=`cut -f "$COL" decodeblock | awk '{printf "%d",$1}'`

for i in `tc_dec -f decypherbet $BLOCK | awk '{print $1}'`
do 
grep " $i" /tmp/code
done | awk -v "check=$CHECKCOL" '{if (i==0) {tag =-1; split('check',a,""); failflg=0;}  i++; if ($1==0) {tag=i-1; i=i-1;} else { new=$1; old=a[i]; if (new!=old) failflg=1;} if((i==8) && (tag >=0)) {printf "%d %d\n",failflg,tag;} }' | awk -v "ref=$REFCOL" '{split('ref',a,""); if ($1==0) {printf "%d",a[$2]-1;} fflush();}' >> /tmp/recoctalmess

TRUNC=`echo $TRUNC +1 | bc`

COL=`echo $COL+2 | bc`
if test "$COL" -gt "6"
then COL=1
./blkgen decodeseed decodeblock
fi

DOTS=`echo "$DOTS +1" | bc`
if test "$DOTS" -gt "79"
then echo "."
DOTS=0
else
echo "." | tr -d "\n"
fi
done 

echo ""
#cat /tmp/recoctalmess
#echo ""


if test "$OCTAL" -eq "0"
then
  awk '{printf "obase=2; ibase=8; 4%s\n",$0}' /tmp/recoctalmess | bc | tr -d "\n\\" 2> /dev/null | tail -c `awk -v "t=$TRUNC" 'BEGIN{ print int((3*t + 2)/8) * 8; }'` | rev | fold -w 8 | awk '{if (i==0) printf "obase=10; ibase=2;"; i++; print $0}' | bc | awk '{printf "%c",$1}' | fold -w 79
else
  cat /tmp/recoctalmess
  echo ""
fi

  echo ""

#cleanup 
rm /tmp/recoctalmess decodeseed decodeblock decypherbet
 exit 0
